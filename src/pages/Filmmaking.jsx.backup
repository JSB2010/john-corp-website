import React, { useState, useRef, useEffect } from 'react'
import { useConnectionQuality, preloadVideoThumbnails } from '../utils/videoUtils'

function Filmmaking() {
  const [selectedFilm, setSelectedFilm] = useState(null);
  const [showFilmDetails, setShowFilmDetails] = useState(false);
  const detailsRef = useRef(null);
  const [isMobile, setIsMobile] = useState(false);
  const { connectionQuality, saveData, isLowBandwidth } = useConnectionQuality();
  
  
  // Check if the device is mobile or has a small screen
  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };
    
    // Check on initial load
    checkMobile();
    
    // Check on window resize
    window.addEventListener('resize', checkMobile);
    
    // Preload thumbnails for better performance (only for high-bandwidth connections)
    if (!isLowBandwidth) {
      preloadVideoThumbnails(films);
    }
    
    // Setup video behavior (after DOM is ready)
    setTimeout(() => {
      // Handle thumbnail clicks to play video
      document.querySelectorAll('.video-thumbnail, .video-thumbnail-play').forEach(el => {
        el.addEventListener('click', (e) => {
          const container = e.currentTarget.closest('.responsive-video-container');
          if (!container) return;
          
          // Hide thumbnail and play button
          const thumbnail = container.querySelector('.video-thumbnail');
          if (thumbnail) thumbnail.classList.add('hidden');
          
          const playButton = container.querySelector('.video-thumbnail-play');
          if (playButton) playButton.style.display = 'none';
          
          // Get the iframe and update its src to autoplay
          const iframe = container.querySelector('iframe');
          if (iframe) {
            const src = iframe.getAttribute('data-video-src');
            if (src) {
              // Add current quality parameter to the autoplay URL
              const quality = iframe.getAttribute('data-quality') || 'auto';
              iframe.src = src.includes('?') 
                ? `${src}&autoplay=1&pip=1&quality=${quality}` 
                : `${src}?autoplay=1&pip=1&quality=${quality}`;
            }
          }
        });
      });
      
      // Handle Picture-in-Picture buttons
      document.querySelectorAll('.video-pip-button').forEach(button => {
        button.addEventListener('click', (e) => {
          const container = e.currentTarget.closest('.responsive-video-container');
          if (!container) return;
          
          const iframe = container.querySelector('iframe');
          if (iframe) {
            // Use the browser's PiP API if available
            if (document.pictureInPictureEnabled && iframe.requestPictureInPicture) {
              iframe.requestPictureInPicture().catch(error => {
                console.error("Picture-in-Picture failed:", error);
              });
            } else {
              // Fallback - try to use the embed provider's PiP feature
              // This is provider-specific and may not work for all embed types
              const currentSrc = iframe.src;
              if (!currentSrc.includes('pip=1')) {
                iframe.src = currentSrc.includes('?') 
                  ? `${currentSrc}&pip=1` 
                  : `${currentSrc}?pip=1`;
              }
            }
          }
        });
      });
      
      // Handle fullscreen buttons
      document.querySelectorAll('.video-fullscreen-button').forEach(button => {
        button.addEventListener('click', (e) => {
          const container = e.currentTarget.closest('.responsive-video-container');
          if (!container) return;
          
          try {
            if (!document.fullscreenElement) {
              // Enter fullscreen
              if (container.requestFullscreen) {
                container.requestFullscreen();
              } else if (container.webkitRequestFullscreen) { /* Safari */
                container.webkitRequestFullscreen();
              } else if (container.msRequestFullscreen) { /* IE11 */
                container.msRequestFullscreen();
              }
              button.classList.add('active');
            } else {
              // Exit fullscreen
              if (document.exitFullscreen) {
                document.exitFullscreen();
              } else if (document.webkitExitFullscreen) { /* Safari */
                document.webkitExitFullscreen();
              } else if (document.msExitFullscreen) { /* IE11 */
                document.msExitFullscreen();
              }
              button.classList.remove('active');
            }
          } catch (error) {
            console.error("Fullscreen toggle failed:", error);
          }
        });
      });
      
      // Handle closed captions buttons
      document.querySelectorAll('.video-cc-button').forEach(button => {
        button.addEventListener('click', (e) => {
          const container = e.currentTarget.closest('.responsive-video-container');
          if (!container) return;
          
          // Toggle CC menu
          const ccMenu = container.querySelector('.video-cc-menu');
          if (ccMenu) {
            ccMenu.classList.toggle('visible');
          }
        });
      });
      
      // Handle closed caption language options
      document.querySelectorAll('.video-cc-option').forEach(option => {
        option.addEventListener('click', (e) => {
          const container = e.currentTarget.closest('.responsive-video-container');
          if (!container) return;
          
          // Get the language code
          const lang = e.currentTarget.getAttribute('data-lang');
          const iframe = container.querySelector('iframe');
          if (!iframe) return;
          
          // Hide the menu
          const ccMenu = container.querySelector('.video-cc-menu');
          if (ccMenu) {
            ccMenu.classList.remove('visible');
          }
          
          const ccButton = container.querySelector('.video-cc-button');
          
          // Update video source with CC parameter
          const currentSrc = iframe.src;
          if (lang === 'off') {
            // Turn off captions
            iframe.src = currentSrc.replace(/&cc=[^&]+/, '&cc=0');
            if (ccButton) ccButton.classList.remove('active');
          } else {
            // Add or update caption parameter
            if (currentSrc.includes('cc=')) {
              iframe.src = currentSrc.replace(/cc=[^&]+/, `cc=1&cc_lang=${lang}`);
            } else {
              iframe.src = currentSrc.includes('?') 
                ? `${currentSrc}&cc=1&cc_lang=${lang}` 
                : `${currentSrc}?cc=1&cc_lang=${lang}`;
            }
            
            if (ccButton) ccButton.classList.add('active');
          }
          
          // Mark this option as active
          container.querySelectorAll('.video-cc-option').forEach(opt => {
            opt.classList.remove('active');
          });
          e.currentTarget.classList.add('active');
        });
      });
      
      // Add accessibility improvements
      document.querySelectorAll('.video-thumbnail-play').forEach(button => {
        // Make sure play buttons are keyboard navigable
        if (!button.hasAttribute('tabindex')) {
          button.setAttribute('tabindex', '0');
        }
        
        // Add keyboard support (Enter/Space)
        button.addEventListener('keydown', (e) => {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            e.currentTarget.click();
          }
        });
        
        // Add proper ARIA roles
        if (!button.hasAttribute('role')) {
          button.setAttribute('role', 'button');
          button.setAttribute('aria-label', 'Play video');
        }
      });
      
      // Add fullscreen change event listener
      document.addEventListener('fullscreenchange', () => {
        const fullscreenButtons = document.querySelectorAll('.video-fullscreen-button');
        if (document.fullscreenElement) {
          fullscreenButtons.forEach(btn => btn.classList.add('active'));
        } else {
          fullscreenButtons.forEach(btn => btn.classList.remove('active'));
        }
      });
      
    }, 1000); // Small delay to ensure DOM is fully loaded
    
    // Cleanup listener on component unmount
    return () => {
      window.removeEventListener('resize', checkMobile);
      // Cleanup would go here for other event listeners
      document.removeEventListener('fullscreenchange', () => {});
    };
  }, [isMobile, isLowBandwidth, connectionQuality, films]);
  
  // Array of film data for easy management and rendering
  const films = [
    {
      id: 1,
      title: "The Greater Norway Movement",
      year: 2023,
      director: "John Cunningham",
      genre: "Documentary",
      duration: "8 mins",
      description: "An exploration of Norway's cultural and political influence across Scandinavia, examining how Norwegian values have shaped regional development.",
      thumbnail: "/placeholder-norway.svg",
      embedCode: '<iframe width="560" height="315" src="https://smmall.cloud/embed/askthekidz/MTc0NjU0NDE1MjQ0NA" title="Smmall Cloud video player" frameborder="0" allow="autoplay; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>',
      isPrimary: true,
      awards: ["Best Documentary - Nordic Film Festival 2023", "Official Selection - Toronto International Film Festival"]
    },
    {
      id: 2,
      title: "John Corp Ad",
      year: 2025,
      director: "Sonnor Ciegal",
      genre: "Commercial Campaign",
      duration: "3 min",
      description: "Award-winning commercial series showcasing the strength of John Corp's innovative solutions across various industries.",
      thumbnail: "/placeholder-commercial.svg",
      embedCode: '<iframe width="560" height="315" src="https://smmall.cloud/embed/askthekidz/MTc0NjU0NDE1MjQ0Nw" title="Smmall Cloud video player" frameborder="0" allow="autoplay; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>',
      awards: ["Gold - Advertising Film Festival", "Best Cinematography - Commercial Awards"]
    },
    {
      id: 3,
      title: "Connected",
      year: 2021,
      director: "Emma Thompson",
      genre: "Short Film",
      duration: "18 min",
      description: "A narrative short exploring human connections through the metaphor of adhesive bonds.",
      thumbnail: "/placeholder-connected.svg",
      awards: ["Best Short Film - Independent Film Circuit", "Audience Award - Short Film Festival"]
    },
    {
      id: 4,
      title: "Norway's Legacy",
      year: 2024,
      director: "Sofia Bergström",
      genre: "Documentary",
      duration: "105 min",
      description: "The sequel to our acclaimed documentary, examining Norway's continued influence in international affairs.",
      thumbnail: "/placeholder-legacy.svg",
      status: "In Production",
      releaseDate: "Fall 2024"
    }
    // Add more films as needed
  ];

  // Function to open the video player modal
  const openVideoPlayer = (film) => {
    setSelectedFilm(film);
    document.body.style.overflow = 'hidden'; // Prevent scrolling when modal is open
    
    // Add escape key listener for closing the modal
    document.addEventListener('keydown', handleEscapeKey);
  };

  // Function to close the video player modal
  const closeVideoPlayer = () => {
    setSelectedFilm(null);
    document.body.style.overflow = 'auto'; // Re-enable scrolling
    
    // Remove escape key listener
    document.removeEventListener('keydown', handleEscapeKey);
  };
  
  // Function to handle escape key press
  const handleEscapeKey = (e) => {
    if (e.key === 'Escape') {
      closeVideoPlayer();
    }
  };

  // Function to toggle film details
  const toggleFilmDetails = (film) => {
    setShowFilmDetails(film);
    setTimeout(() => {
      if (detailsRef.current) {
        detailsRef.current.scrollIntoView({ behavior: 'smooth' });
      }
    }, 100);
  };

  // Function to create markup from embed code
  const createMarkup = (htmlContent) => {
    return { __html: htmlContent };
  };
  
  // Get a human-readable quality label
  const getQualityLabel = (quality, saveData) => {
    if (saveData) return 'Data Saver';
    if (quality === 'high') return 'HD';
    if (quality === 'low') return 'SD';
    return 'Auto';
  };
  
  // Get a human-readable network quality label
  const getNetworkLabel = (quality) => {
    if (quality === 'high') return 'Fast';
    if (quality === 'medium') return 'Good';
    if (quality === 'low') return 'Slow';
    return 'Auto';
  };
  
  // Function to wrap embed code in responsive container with load handling
  const getResponsiveEmbedCode = (embedCode, thumbnailUrl = null) => {
    // Use a regex to get just the src URL from the iframe
    const srcMatch = embedCode.match(/src="([^"]+)"/);
    if (!srcMatch || !srcMatch[1]) return embedCode;
    
    const iframeSrc = srcMatch[1];
    const title = embedCode.match(/title="([^"]+)"/) ? embedCode.match(/title="([^"]+)"/)[1] : "Video player";
    const allowAttr = embedCode.match(/allow="([^"]+)"/) ? embedCode.match(/allow="([^"]+)"/)[1] : "";
    
    // Add quality parameter based on connection quality
    let quality = 'auto';
    if (isLowBandwidth) {
      quality = 'low';
    } else if (connectionQuality === 'high') {
      quality = 'high';
    }
    
    // Add support for Picture-in-Picture and autoplay with quality selection
    const enhancedSrc = iframeSrc.includes('?') 
      ? `${iframeSrc}&autoplay=0&pip=1&quality=${quality}&cc=0` 
      : `${iframeSrc}?autoplay=0&pip=1&quality=${quality}&cc=0`;
    
    // Use lazy loading for thumbnails on mobile or low bandwidth connections
    const lazyLoad = isMobile || isLowBandwidth ? 'loading="lazy"' : '';
    
    // Include onload attribute to handle loaded state and add data attributes for API interaction
    return `<div class="responsive-video-container">
      ${thumbnailUrl ? `<img src="${thumbnailUrl}" alt="${title} thumbnail" class="video-thumbnail" data-video-id="${srcMatch[1]}" ${lazyLoad} />
      <div class="video-thumbnail-play" tabindex="0" role="button" aria-label="Play video">
        <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path d="M8 5v14l11-7z"/>
        </svg>
      </div>` : ''}
      <iframe 
        src="${enhancedSrc}" 
        title="${title}" 
        allow="${allowAttr}; autoplay; picture-in-picture; fullscreen" 
        allowfullscreen
        onload="this.classList.remove('loading'); this.classList.add('loaded')" 
        class="loading"
        data-video-src="${iframeSrc}"
        data-quality="${quality}"
      ></iframe>
      <div class="video-controls">
        <div class="video-progress-container">
          <div class="video-progress-bar">
            <div class="video-progress-indicator"></div>
          </div>
        </div>
        <div class="video-time-display">0:00 / 0:00</div>
        <button class="video-cc-button" title="Closed Captions" aria-label="Toggle closed captions">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="2" y="6" width="20" height="12" rx="2" ry="2"></rect>
            <path d="M7 10h3m-3 4h2"></path>
            <path d="M14 10h3m-3 4h2"></path>
          </svg>
        </button>
        <button class="video-fullscreen-button" title="Fullscreen" aria-label="Toggle fullscreen mode">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"></path>
          </svg>
        </button>
        <button class="video-pip-button" title="Picture in Picture" aria-label="Enter picture in picture mode">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="2" y="2" width="20" height="20" rx="2" ry="2"></rect>
            <rect x="10" y="10" width="12" height="12" rx="2" ry="2"></rect>
          </svg>
        </button>
      </div>
      <div class="video-cc-menu">
        <div class="video-cc-option" data-lang="en">English</div>
        <div class="video-cc-option" data-lang="es">Español</div>
        <div class="video-cc-option" data-lang="no">Norsk</div>
        <div class="video-cc-option" data-lang="off">Off</div>
      </div>
    </div>`;
  };
  };

  return (
    <div className="bg-white">
      {/* Hero Section */}
      <div style={{ backgroundColor: '#1f2937' }} className="text-white">
        <div className="container py-16 px-4">
          <div style={{ maxWidth: '768px' }}>
            <h1 className="mb-4">John Corp Filmmaking</h1>
            <p className="mb-6" style={{ fontSize: '1.25rem' }}>
              Creating compelling visual stories that captivate audiences.
            </p>
          </div>
        </div>
      </div>

      {/* Our Approach */}
      <div className="container py-16 px-4">
        <h2 className="text-center mb-12">Our Filmmaking Approach</h2>

        <div className="flex flex-col md:flex-row" style={{ gap: '3rem', alignItems: 'center' }}>
          <div className="md:w-1/2">
            <div className="bg-gray-200 p-4" style={{ borderRadius: '0.5rem', height: '320px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
              <p className="text-gray-500" style={{ fontSize: '1.25rem', fontWeight: '600' }}>Filmmaking Team Image</p>
            </div>
          </div>
          <div className="md:w-1/2">
            <p className="text-gray-700 mb-4">
              At John Corp, our filmmaking division combines technical expertise with creative storytelling to produce
              films that leave a lasting impression. From concept development to final delivery, we handle every aspect
              of the production process with meticulous attention to detail.
            </p>
            <p className="text-gray-700 mb-4">
              Our team of directors, cinematographers, editors, and production specialists work collaboratively to
              bring creative visions to life. Whether it's a commercial, documentary, corporate video, or narrative film,
              we approach each project with the same level of dedication and artistic integrity.
            </p>
            <p className="text-gray-700">
              We believe that great filmmaking is about more than just beautiful visuals—it's about telling stories
              that resonate with audiences and achieve our clients' objectives.
            </p>
          </div>
        </div>
      </div>

      {/* Services */}
      <div className="bg-gray-50 py-16">
        <div className="container px-4">
          <h2 className="text-center mb-12">Our Filmmaking Services</h2>

          <div className="grid md:grid-cols-2">
            <div className="bg-white p-4 mb-4" style={{ borderRadius: '0.5rem', boxShadow: '0 1px 3px rgba(0,0,0,0.12)' }}>
              <h3 className="mb-4" style={{ fontSize: '1.5rem' }}>Commercial Production</h3>
              <p className="text-gray-700 mb-4">
                Engaging commercials that showcase your products and services in the best light. We create
                advertisements that not only look great but also drive results for your business.
              </p>
              <ul style={{ listStyleType: 'disc', paddingLeft: '1.25rem' }} className="text-gray-700">
                <li>TV commercials</li>
                <li>Web advertisements</li>
                <li>Social media content</li>
                <li>Product demonstrations</li>
              </ul>
            </div>

            <div className="bg-white p-4 mb-4" style={{ borderRadius: '0.5rem', boxShadow: '0 1px 3px rgba(0,0,0,0.12)' }}>
              <h3 className="mb-4" style={{ fontSize: '1.5rem' }}>Corporate Videos</h3>
              <p className="text-gray-700 mb-4">
                Professional videos that communicate your company's message, values, and culture. From training
                videos to company profiles, we help you connect with your audience.
              </p>
              <ul style={{ listStyleType: 'disc', paddingLeft: '1.25rem' }} className="text-gray-700">
                <li>Company profiles</li>
                <li>Training videos</li>
                <li>Event coverage</li>
                <li>Internal communications</li>
              </ul>
            </div>

            <div className="bg-white p-4 mb-4" style={{ borderRadius: '0.5rem', boxShadow: '0 1px 3px rgba(0,0,0,0.12)' }}>
              <h3 className="mb-4" style={{ fontSize: '1.5rem' }}>Documentary Filmmaking</h3>
              <p className="text-gray-700 mb-4">
                Compelling documentaries that tell real stories with depth and authenticity. We research,
                interview, and craft narratives that inform and inspire.
              </p>
              <ul style={{ listStyleType: 'disc', paddingLeft: '1.25rem' }} className="text-gray-700">
                <li>Feature documentaries</li>
                <li>Short-form documentaries</li>
                <li>Series production</li>
                <li>Educational content</li>
              </ul>
            </div>

            <div className="bg-white p-4" style={{ borderRadius: '0.5rem', boxShadow: '0 1px 3px rgba(0,0,0,0.12)' }}>
              <h3 className="mb-4" style={{ fontSize: '1.5rem' }}>Narrative Films</h3>
              <p className="text-gray-700 mb-4">
                Creative storytelling through narrative filmmaking. From short films to feature productions,
                we bring scripts to life with cinematic excellence.
              </p>
              <ul style={{ listStyleType: 'disc', paddingLeft: '1.25rem' }} className="text-gray-700">
                <li>Short films</li>
                <li>Feature films</li>
                <li>Web series</li>
                <li>Music videos</li>
              </ul>
            </div>
          </div>
        </div>
      </div>

      {/* Featured Film - NEW SECTION */}
      <div className="py-16 bg-black">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-6 text-white">Featured Film</h2>
          <p className="text-gray-300 text-center max-w-3xl mx-auto mb-12">
            Our critically acclaimed documentary exploring Norway's cultural, economic, and political influence across Scandinavia and beyond.
          </p>
          
          <div className="max-w-5xl mx-auto mb-12 rounded-lg overflow-hidden shadow-2xl">
            <div className="bg-black">
              <div dangerouslySetInnerHTML={createMarkup(getResponsiveEmbedCode(films[0].embedCode, films[0].thumbnail))} />
            </div>
            
            <div className="bg-gray-900 p-6">
              <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center mb-4">
                <h3 className="text-2xl font-bold text-white mb-2 sm:mb-0">{films[0].title}</h3>
                <div className="flex items-center space-x-2">
                  <span className="text-yellow-400">★★★★★</span>
                  <span className="text-gray-300">{films[0].duration}</span>
                </div>
              </div>
              
              <div className="flex flex-wrap gap-2 mb-4">
                <span className="px-3 py-1 bg-blue-600 text-white text-sm rounded-full">{films[0].genre}</span>
                <span className="px-3 py-1 bg-gray-700 text-white text-sm rounded-full">{films[0].year}</span>
                <span className="px-3 py-1 bg-gray-700 text-white text-sm rounded-full">Dir: {films[0].director}</span>
              </div>
              
              <p className="text-gray-300 mb-6">{films[0].description}</p>
              
              <button 
                onClick={() => toggleFilmDetails(films[0])}
                className="mt-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition duration-300"
              >
                View Film Details
              </button>
            </div>
          </div>
          
          {/* Second Featured Film (John Corp Ad) */}
          <div className="max-w-4xl mx-auto">
            <h3 className="text-2xl font-bold text-center mb-6 text-white">John Corp Commercial</h3>
            
            <div className="rounded-lg overflow-hidden shadow-2xl mb-8">
              <div className="bg-black">
                <div dangerouslySetInnerHTML={createMarkup(getResponsiveEmbedCode(films[1].embedCode, films[1].thumbnail))} />
              </div>
              
              <div className="bg-gray-900 p-4">
                <div className="flex justify-between items-center">
                  <h4 className="text-xl font-semibold text-white">{films[1].title}</h4>
                  <span className="text-gray-300">{films[1].duration}</span>
                </div>
                <p className="text-gray-400 mt-2 text-sm">{films[1].description}</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Film Collection */}
      <div className="py-16 bg-gray-50">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-6 text-gray-800">Our Film Collection</h2>
          <p className="text-gray-600 text-center max-w-3xl mx-auto mb-12">
            Explore our diverse portfolio of films spanning various genres and formats, each created with our signature attention to detail and storytelling excellence.
          </p>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {films.map((film) => (
              <div key={film.id} className="bg-white rounded-lg overflow-hidden shadow-lg transition-transform duration-300 hover:-translate-y-2">
                <div className="relative">
                  <div 
                    className="bg-gray-300 h-56 w-full flex items-center justify-center cursor-pointer"
                    onClick={() => film.embedCode ? openVideoPlayer(film) : null}
                    onKeyPress={(e) => {
                      if ((e.key === 'Enter' || e.key === ' ') && film.embedCode) {
                        e.preventDefault();
                        openVideoPlayer(film);
                      }
                    }}
                    role="button"
                    tabIndex={0}
                    aria-label={`Watch ${film.title}`}
                  >
                    {film.thumbnail ? (
                      <img 
                        src={film.thumbnail} 
                        alt={`${film.title} thumbnail`} 
                        className="w-full h-full object-cover"
                      />
                    ) : (
                      <div className="text-gray-500 text-center p-4">
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12 mx-auto mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 4v16M17 4v16M3 8h4m10 0h4M3 12h18M3 16h4m10 0h4M4 20h16a1 1 0 001-1V5a1 1 0 00-1-1H4a1 1 0 00-1 1v14a1 1 0 001 1z" />
                        </svg>
                        <p>Film Thumbnail</p>
                      </div>
                    )}
                    
                    {film.embedCode && (
                      <div className="absolute inset-0 flex items-center justify-center">
                        <div className="bg-black bg-opacity-50 rounded-full p-4">
                          <svg xmlns="http://www.w3.org/2000/svg" className="h-10 w-10 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                          </svg>
                        </div>
                      </div>
                    )}
                  </div>
                  <div className="absolute top-0 right-0 bg-black bg-opacity-75 text-white px-3 py-1 m-2 rounded-full text-sm">
                    {film.year}
                  </div>
                  {film.status && (
                    <div className="absolute top-0 left-0 bg-blue-600 text-white px-3 py-1 m-2 rounded-full text-sm">
                      {film.status}
                    </div>
                  )}
                </div>
                
                <div className="p-6">
                  <div className="flex justify-between items-start mb-2">
                    <h3 className="text-xl font-bold text-gray-800">{film.title}</h3>
                    <span className="text-sm text-gray-500">{film.duration}</span>
                  </div>
                  <div className="flex space-x-2 mb-4">
                    <span className="text-blue-600 text-sm font-medium">{film.genre}</span>
                    <span className="text-gray-400">•</span>
                    <span className="text-gray-600 text-sm">Dir: {film.director}</span>
                  </div>
                  
                  <p className="text-gray-600 mb-4 line-clamp-3">
                    {film.description}
                  </p>                      {film.awards && film.awards.length > 0 && (
                        <div className="mb-4">
                          <h4 className="text-sm font-semibold text-gray-700 mb-1">Awards & Recognition:</h4>
                          <ul className="text-xs text-gray-600 space-y-1">
                            {film.awards.slice(0, 2).map((award, i) => (
                              <li key={`${film.id}-award-${i}`} className="flex items-start">
                                <span className="text-yellow-500 mr-1">★</span> {award}
                              </li>
                            ))}
                        {film.awards.length > 2 && (
                          <li className="text-blue-600 cursor-pointer hover:underline">
                            + {film.awards.length - 2} more
                          </li>
                        )}
                      </ul>
                    </div>
                  )}
                  
                  <div className="flex space-x-3">
                    {film.embedCode && (
                      <button 
                        onClick={() => openVideoPlayer(film)}
                        className="flex-1 bg-blue-700 hover:bg-blue-800 text-white py-2 rounded-md transition-colors duration-300"
                      >
                        Watch Now
                      </button>
                    )}
                    
                    <button 
                      onClick={() => toggleFilmDetails(film)}
                      className="flex-1 bg-gray-800 hover:bg-gray-900 text-white py-2 rounded-md transition-colors duration-300"
                    >
                      Details
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
          
          <div className="mt-12 text-center">
            <button className="bg-blue-700 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-800 transition-colors duration-300">
              View Complete Filmography
            </button>
          </div>
        </div>
      </div>

      {/* Film Details Section */}
      {showFilmDetails && (
        <div ref={detailsRef} className="py-16 bg-gray-100 border-t border-b border-gray-200">
          <div className="container mx-auto px-4">
            <div className="flex justify-between items-center mb-8">
              <h2 className="text-3xl font-bold text-gray-800">{showFilmDetails.title}</h2>
              <button 
                onClick={() => setShowFilmDetails(null)} 
                className="text-gray-500 hover:text-gray-700"
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>

            <div className="flex flex-col lg:flex-row gap-12">
              <div className="lg:w-1/3">
                <div className="bg-gray-200 rounded-lg aspect-[2/3] mb-6 flex items-center justify-center">
                  <p className="text-gray-500 text-xl font-semibold">Film Poster</p>
                </div>
                
                <div className="grid grid-cols-3 gap-4 mb-6">
                  <div className="bg-white p-3 rounded-lg shadow text-center">
                    <p className="text-gray-700 font-bold">Runtime</p>
                    <p className="text-gray-600">{showFilmDetails.duration}</p>
                  </div>
                  <div className="bg-white p-3 rounded-lg shadow text-center">
                    <p className="text-gray-700 font-bold">Release</p>
                    <p className="text-gray-600">{showFilmDetails.year}</p>
                  </div>
                  <div className="bg-white p-3 rounded-lg shadow text-center">
                    <p className="text-gray-700 font-bold">Genre</p>
                    <p className="text-gray-600">{showFilmDetails.genre}</p>
                  </div>
                </div>
                
                {showFilmDetails.awards && showFilmDetails.awards.length > 0 && (
                  <div className="bg-white p-5 rounded-lg shadow mb-6">
                    <h4 className="font-bold text-blue-700 mb-3">Awards & Recognition</h4>
                    <ul className="text-gray-700 space-y-2">
                      {showFilmDetails.awards.map((award, i) => (
                        <li key={`award-detail-${showFilmDetails.id}-${i}`} className="flex items-start">
                          <span className="text-yellow-500 mr-2">★</span> {award}
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>
              
              <div className="lg:w-2/3">
                <h3 className="text-2xl font-bold mb-4 text-blue-700">About the Film</h3>
                <p className="text-gray-700 mb-6">
                  {showFilmDetails.description}
                </p>
                
                <div className="mb-8">
                  <h4 className="text-xl font-semibold mb-3 text-gray-800">Director's Vision</h4>
                  <div className="flex items-start mb-4">
                    <div className="bg-gray-200 rounded-full h-16 w-16 flex items-center justify-center mr-4">
                      <p className="text-gray-500 text-xs">Photo</p>
                    </div>
                    <div>
                      <p className="font-bold">{showFilmDetails.director}</p>
                      <p className="text-gray-600 italic">"{showFilmDetails.title} represents our dedication to storytelling that matters. Through this film, we wanted to capture the essence of the subject and present it in a way that resonates with audiences worldwide."</p>
                    </div>
                  </div>
                </div>
                
                {showFilmDetails.embedCode && (                    <div className="mb-8">
                      <h4 className="text-xl font-semibold mb-4 text-gray-800">Watch Now</h4>
                      <div className="bg-black rounded-lg overflow-hidden">
                        <div dangerouslySetInnerHTML={createMarkup(getResponsiveEmbedCode(showFilmDetails.embedCode, showFilmDetails.thumbnail))} />
                      </div>
                    </div>
                )}
                
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <button className="bg-blue-700 text-white px-4 py-3 rounded-lg font-semibold hover:bg-blue-800 transition flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                    </svg>
                    Behind the Scenes
                  </button>
                  <button className="bg-gray-800 text-white px-4 py-3 rounded-lg font-semibold hover:bg-gray-900 transition flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                    </svg>
                    Director's Commentary
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Video Player Modal */}
      {selectedFilm && (
        <div className="fixed inset-0 bg-black bg-opacity-95 z-50 flex items-center justify-center p-4 video-player-modal">
          <div className={`w-full ${isMobile ? 'max-w-full' : 'max-w-6xl'} bg-black rounded-lg overflow-hidden relative`}>
            <div className="bg-black">
              <div dangerouslySetInnerHTML={createMarkup(getResponsiveEmbedCode(selectedFilm.embedCode))} />
            </div>
            <button 
              onClick={closeVideoPlayer}
              className="absolute top-4 right-4 text-white bg-gray-800 bg-opacity-70 rounded-full p-2 hover:bg-gray-700 transition-colors"
              aria-label="Close video"
            >
              <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            <div className="p-4 text-white">
              <h3 className="text-xl font-bold mb-1">{selectedFilm.title}</h3>
              <p className="text-gray-300 text-sm">{selectedFilm.year} • {selectedFilm.genre} • {selectedFilm.duration}</p>
              
              {/* Add video controls and quality selection */}
              <div className="flex flex-wrap items-center space-x-2 mt-3 text-sm">
                <div className="flex items-center space-x-1 bg-gray-800 px-3 py-1 rounded mb-2">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" />
                  </svg>
                  <span>
                    {getQualityLabel(connectionQuality, saveData)}
                  </span>
                </div>
                <div className="flex items-center space-x-1 bg-gray-800 px-3 py-1 rounded mb-2 cursor-pointer" 
                     role="button" 
                     tabIndex={0}
                     onClick={() => {
                       const iframe = document.querySelector('.video-player-modal iframe');
                       if (iframe) {
                         const button = iframe.parentNode.querySelector('.video-pip-button');
                         if (button) button.click();
                       }
                     }}
                     onKeyPress={(e) => {
                       if (e.key === 'Enter' || e.key === ' ') {
                         e.preventDefault();
                         const iframe = document.querySelector('.video-player-modal iframe');
                         if (iframe) {
                           const button = iframe.parentNode.querySelector('.video-pip-button');
                           if (button) button.click();
                         }
                       }
                     }}
                     aria-label="Enable picture-in-picture mode"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                  </svg>
                  <span>PiP</span>
                </div>
                <div className="flex items-center space-x-1 bg-gray-800 px-3 py-1 rounded mb-2 cursor-pointer"
                     role="button"
                     tabIndex={0}
                     onClick={() => {
                       const iframe = document.querySelector('.video-player-modal iframe');
                       if (iframe) {
                         const button = iframe.parentNode.querySelector('.video-cc-button');
                         if (button) button.click();
                       }
                     }}
                     aria-label="Toggle closed captions"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z" />
                  </svg>
                  <span>CC</span>
                </div>
                
                <div className="flex items-center space-x-1 bg-gray-800 px-3 py-1 rounded mb-2 cursor-pointer"
                     role="button"
                     tabIndex={0}
                     onClick={() => {
                       const container = document.querySelector('.video-player-modal .responsive-video-container');
                       if (container) {
                         const button = container.querySelector('.video-fullscreen-button');
                         if (button) button.click();
                       }
                     }}
                     aria-label="Toggle fullscreen"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5v-4m0 4h-4m4 0l-5-5" />
                  </svg>
                  <span>Fullscreen</span>
                </div>
                
                {/* Network quality indicator */}
                {connectionQuality && (
                  <div className="flex items-center space-x-1 bg-gray-800 px-3 py-1 rounded mb-2 ml-auto">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0" />
                    </svg>
                    <span>
                      {getNetworkLabel(connectionQuality)}
                    </span>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Portfolio */}
      <div className="container py-16 px-4">
        <h2 className="text-center mb-12">Featured Projects</h2>

        <div className="grid md:grid-cols-3">
          <div style={{ borderRadius: '0.5rem', overflow: 'hidden', boxShadow: '0 1px 3px rgba(0,0,0,0.12)', marginBottom: '1rem' }}>
            <div className="bg-gray-200" style={{ height: '192px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
              <p className="text-gray-500">Project Thumbnail</p>
            </div>
            <div className="p-4">
              <h3 className="mb-2" style={{ fontSize: '1.25rem' }}>The Greater Norway Movement</h3>
              <p className="text-gray-600 mb-3">Documentary</p>
              <p className="text-gray-700">
                Our award-winning exploration of Norway's cultural and political influence across Scandinavia.
              </p>
            </div>
          </div>

          <div style={{ borderRadius: '0.5rem', overflow: 'hidden', boxShadow: '0 1px 3px rgba(0,0,0,0.12)', marginBottom: '1rem' }}>
            <div className="bg-gray-200" style={{ height: '192px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
              <p className="text-gray-500">Project Thumbnail</p>
            </div>
            <div className="p-4">
              <h3 className="mb-2" style={{ fontSize: '1.25rem' }}>Bond</h3>
              <p className="text-gray-600 mb-3">Commercial Campaign</p>
              <p className="text-gray-700">
                Award-winning commercial series showcasing the strength of Jizz Tech in extreme conditions.
              </p>
            </div>
          </div>

          <div style={{ borderRadius: '0.5rem', overflow: 'hidden', boxShadow: '0 1px 3px rgba(0,0,0,0.12)' }}>
            <div className="bg-gray-200" style={{ height: '192px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
              <p className="text-gray-500">Project Thumbnail</p>
            </div>
            <div className="p-4">
              <h3 className="mb-2" style={{ fontSize: '1.25rem' }}>Connected</h3>
              <p className="text-gray-600 mb-3">Short Film</p>
              <p className="text-gray-700">
                A narrative short exploring human connections through the metaphor of adhesive bonds.
              </p>
            </div>
          </div>
        </div>

        <div className="mt-8 text-center">
          <button className="btn btn-primary" style={{ backgroundColor: '#1f2937' }}>
            View Full Portfolio
          </button>
        </div>
      </div>

      {/* Video Gallery */}
      <div className="bg-gray-900 py-16">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-12 text-white">Video Gallery</h2>

          <div className="grid md:grid-cols-2 gap-8">
            <div className="bg-gray-800 rounded-lg overflow-hidden shadow-lg">
              <div className="bg-gray-700 h-64 flex items-center justify-center">
                <div className="text-white text-center">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-16 w-16 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <p className="text-gray-300">Featured Documentary</p>
                </div>
              </div>
              <div className="p-6">
                <h3 className="text-xl font-bold mb-2 text-white">The Greater Norway Movement</h3>
                <p className="text-gray-400 mb-4">
                  Our award-winning documentary exploring Norway's cultural and political influence across Scandinavia and beyond.
                </p>
                <button className="bg-blue-700 text-white px-4 py-2 rounded hover:bg-blue-800 transition">
                  Watch Trailer
                </button>
              </div>
            </div>

            <div className="bg-gray-800 rounded-lg overflow-hidden shadow-lg">
              <div className="bg-gray-700 h-64 flex items-center justify-center">
                <div className="text-white text-center">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-16 w-16 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <p className="text-gray-300">Commercial</p>
                </div>
              </div>
              <div className="p-6">
                <h3 className="text-xl font-bold mb-2 text-white">Jizz Tech: Bonds That Last</h3>
                <p className="text-gray-400 mb-4">
                  Our award-winning commercial showcasing the incredible strength of Jizz Tech adhesive in extreme conditions.
                </p>
                <button className="bg-blue-700 text-white px-4 py-2 rounded hover:bg-blue-800 transition">
                  Watch Now
                </button>
              </div>
            </div>
          </div>

          <div className="mt-12 grid md:grid-cols-3 gap-6">
            <div className="bg-gray-800 rounded-lg overflow-hidden shadow-md">
              <div className="bg-gray-700 h-48 flex items-center justify-center">
                <div className="text-white text-center">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12 mx-auto mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <p className="text-gray-300">Behind the Scenes</p>
                </div>
              </div>
              <div className="p-4">
                <h3 className="text-lg font-bold mb-2 text-white">Making of "The Greater Norway Movement"</h3>
                <p className="text-gray-400 text-sm">
                  Go behind the scenes of our acclaimed documentary on Norwegian influence.
                </p>
              </div>
            </div>

            <div className="bg-gray-800 rounded-lg overflow-hidden shadow-md">
              <div className="bg-gray-700 h-48 flex items-center justify-center">
                <div className="text-white text-center">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12 mx-auto mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <p className="text-gray-300">Interview</p>
                </div>
              </div>
              <div className="p-4">
                <h3 className="text-lg font-bold mb-2 text-white">Director's Commentary</h3>
                <p className="text-gray-400 text-sm">
                  Our director discusses the challenges and insights from filming in Norway.
                </p>
              </div>
            </div>

            <div className="bg-gray-800 rounded-lg overflow-hidden shadow-md">
              <div className="bg-gray-700 h-48 flex items-center justify-center">
                <div className="text-white text-center">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12 mx-auto mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <p className="text-gray-300">Teaser</p>
                </div>
              </div>
              <div className="p-4">
                <h3 className="text-lg font-bold mb-2 text-white">Upcoming: Norway's Legacy</h3>
                <p className="text-gray-400 text-sm">
                  A sneak peek at our upcoming sequel to The Greater Norway Movement.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Featured Documentary */}
      <div className="container mx-auto py-16 px-4">
        <h2 className="text-3xl font-bold text-center mb-12 text-gray-800">The Greater Norway Movement</h2>

        <div className="flex flex-col md:flex-row gap-12">
          <div className="md:w-1/2">
            <div className="bg-gray-200 rounded-lg p-8 h-80 flex items-center justify-center mb-6">
              <p className="text-gray-500 text-xl font-semibold">Documentary Poster</p>
            </div>
            <div className="flex gap-4 mb-6">
              <div className="bg-gray-100 p-2 rounded flex-1 text-center">
                <p className="text-gray-700 font-bold">Runtime</p>
                <p className="text-gray-600">92 minutes</p>
              </div>
              <div className="bg-gray-100 p-2 rounded flex-1 text-center">
                <p className="text-gray-700 font-bold">Release</p>
                <p className="text-gray-600">2023</p>
              </div>
              <div className="bg-gray-100 p-2 rounded flex-1 text-center">
                <p className="text-gray-700 font-bold">Language</p>
                <p className="text-gray-600">English, Norwegian</p>
              </div>
            </div>
          </div>

          <div className="md:w-1/2">
            <h3 className="text-2xl font-bold mb-4 text-blue-700">About the Film</h3>
            <p className="text-gray-700 mb-4">
              "The Greater Norway Movement" is our critically acclaimed documentary exploring Norway's cultural, economic, and political influence across Scandinavia and beyond. Through intimate interviews with key figures and stunning cinematography of the Nordic landscape, the film examines how Norwegian values and policies have shaped regional development.
            </p>
            <p className="text-gray-700 mb-6">
              Directed by our award-winning filmmaker Sofia Bergström and produced over three years, the documentary takes viewers on a journey through Norway's history and its growing influence in the 21st century. The film has been featured at multiple international film festivals and won the Best Documentary award at the Nordic Film Festival.
            </p>

            <div className="bg-blue-50 p-4 rounded-lg mb-6">
              <h4 className="font-bold text-blue-700 mb-2">Awards & Recognition</h4>
              <ul className="text-gray-700 space-y-1">
                <li>• Best Documentary - Nordic Film Festival 2023</li>
                <li>• Official Selection - Toronto International Film Festival</li>
                <li>• Cinematography Award - Documentary Film Awards</li>
                <li>• Audience Choice Award - Scandinavian Film Showcase</li>
              </ul>
            </div>

            <button className="bg-blue-700 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-800 transition">
              Watch the Trailer
            </button>
          </div>
        </div>
      </div>

      {/* Our Team */}
      <div className="container mx-auto py-16 px-4">
        <h2 className="text-3xl font-bold text-center mb-12 text-gray-800">Meet Our Creative Team</h2>

        <div className="grid md:grid-cols-4 gap-8">
          <div className="text-center">
            <div className="bg-gray-200 rounded-full h-48 w-48 mx-auto mb-6 flex items-center justify-center">
              <p className="text-gray-500">Photo</p>
            </div>
            <h3 className="text-xl font-bold mb-2">Michael Chen</h3>
            <p className="text-blue-700 mb-3">Creative Director</p>
            <p className="text-gray-700">
              Award-winning filmmaker with over 15 years of experience directing commercials and documentaries.
            </p>
          </div>

          <div className="text-center">
            <div className="bg-gray-200 rounded-full h-48 w-48 mx-auto mb-6 flex items-center justify-center">
              <p className="text-gray-500">Photo</p>
            </div>
            <h3 className="text-xl font-bold mb-2">Sofia Bergström</h3>
            <p className="text-blue-700 mb-3">Director</p>
            <p className="text-gray-700">
              Visionary director behind "The Greater Norway Movement" with a passion for cultural documentaries.
            </p>
          </div>

          <div className="text-center">
            <div className="bg-gray-200 rounded-full h-48 w-48 mx-auto mb-6 flex items-center justify-center">
              <p className="text-gray-500">Photo</p>
            </div>
            <h3 className="text-xl font-bold mb-2">David Washington</h3>
            <p className="text-blue-700 mb-3">Senior Editor</p>
            <p className="text-gray-700">
              Masterful storyteller who transforms raw footage into compelling narratives with perfect pacing.
            </p>
          </div>

          <div className="text-center">
            <div className="bg-gray-200 rounded-full h-48 w-48 mx-auto mb-6 flex items-center justify-center">
              <p className="text-gray-500">Photo</p>
            </div>
            <h3 className="text-xl font-bold mb-2">Emma Thompson</h3>
            <p className="text-blue-700 mb-3">Production Manager</p>
            <p className="text-gray-700">
              Organizational genius who ensures every production runs smoothly from pre-production to final delivery.
            </p>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Filmmaking
